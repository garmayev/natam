<?php

namespace frontend\modules\admin\controllers;

use yii\web\Response;

class SpikController extends \yii\rest\Controller
{
	private $base_url = "http://login.scout-gps.ru:8081/";
	private $actions = [
		"LOGIN" => "spic/auth/rest/Login",
		"LOGOUT" => "spic/auth/rest/Logout",
		"ALL_UNITS_COUNT" => "spic/units/rest/",
		"ALL_UNITS_PAGE" => "spic/units/rest/getAllUnitsPaged",
		"SUBSCRIBE" => "spic/OnlineDataService/rest/Subscribe",
		"ONLINE_DATA" => "spic/OnlineDataService/rest/GetOnlineData",
	];
	protected $data = [];
	protected $fileName;

	public function beforeAction($action)
	{
		$this->fileName = \Yii::getAlias("@webroot")."/spik.json";
		$this->checkFile();
		$this->load();
		return parent::beforeAction($action);
	}

	public function afterAction($action, $result)
	{
		$this->save();
		return parent::afterAction($action, $result); // TODO: Change the autogenerated stub
	}

	private function send($data, $url, $session_id = null, $method = "POST")
	{
		$ch = curl_init();
		$headers = [
			"Accept:json",
			"Content-Type:application/json",
		];

		if (!is_null($session_id)) {
			$headers[] = "ScoutAuthorization:{$session_id}";
		}

		$options = [
			CURLOPT_URL => $this->base_url . $url,
			CURLOPT_RETURNTRANSFER => true,
			CURLOPT_SSL_VERIFYPEER => false,
			CURLOPT_SSL_VERIFYHOST => false,
			CURLOPT_CUSTOMREQUEST => $method,
			CURLOPT_POSTFIELDS => json_encode(is_null($data) ? [] : $data),
			CURLOPT_HTTPHEADER => $headers
		];

		curl_setopt_array($ch, $options);

		$response = curl_exec($ch);

		if ($errno = curl_errno($ch)) {
			$error_message = curl_strerror($errno);
			\Yii::error("cURL error ({$errno}):\n {$error_message}");
		}
		// \Yii::error($response);
		return json_decode($response, true);
	}

	private function save()
	{
		file_put_contents($this->fileName, json_encode($this->data));
	}

	private function load()
	{
		$this->data = json_decode(file_get_contents($this->fileName), true);
	}

	public function actionToken()
	{
		$data = $this->send([
			"Login" => "garmayev@yandex.ru",
			"Password" => "12345",
			"TimeStampUtc" => "/Date(" . time(). ")/",
			"TimeZoneOlsonId" => "Aisa/Irkutsk",
			"CultureName" => "ru-ru",
			"UiCultureName" => "ru-ru"
		], $this->actions["LOGIN"]);
		if ($data) {
			return $this->data["token"] = ["id" => $data["SessionId"], "expireDate" => $data["ExpireDate"]];
		} else {
			return ["token" => null];
		}
	}

	public function actionSubscribe()
	{
		$response = $this->send(["UnitIds" => $this->data["units"]], $this->actions["SUBSCRIBE"], $this->data["token"]["id"]);
		if ( is_null($response) ) {
			return $this->data["subscribe"];
		}
		$this->data["subscribe"] = $response["SessionId"];
		return $response["SessionId"];
	}

	public function actionGetUnitsPage()
	{
		if ( isset($this->data["units"]) ) {
			return $this->data["units"];
		} else {
			$units = $this->send(["Offset" => 0, "Count" => 25], $this->actions["ALL_UNITS_PAGE"], $this->data["token"]["id"]);
			if ( $units ) {
				$ids = [];
				foreach ($units["Units"] as $unit) {
					$ids[] = $unit["UnitId"];
				}
				$this->data["units"] = $ids;
				return $ids;
			}
		}
		return null;
	}

	private function checkFile()
	{
		if (file_exists($this->fileName)) {
			$this->data = json_decode(file_get_contents($this->fileName), true);
		} else {
			file_put_contents($this->fileName, json_encode([]));
		}
	}

	public function actionOnline()
	{
		$onlineData = $this->send(["Id" => $this->data["subscribe"]["Id"]], $this->actions["ONLINE_DATA"], $this->data["token"]["id"]);
		if (isset($onlineData["OnlineDataCollection"])) {
			$collection = $onlineData["OnlineDataCollection"];
			return $collection["DataCollection"];
		}
		return [];
	}

	public function actionTest()
	{
		return $this->data;
	}
}