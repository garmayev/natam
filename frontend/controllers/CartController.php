<?php

namespace frontend\controllers;

use common\models\Category;
use common\models\Product;
use yii\web\Response;

class CartController extends \yii\web\Controller
{
	private $cart;
	public function init()
	{
		$this->cart = \Yii::$app->cart;
		parent::init(); // TODO: Change the autogenerated stub
	}

	public function actionIndex()
	{
		if ( \Yii::$app->request->isAjax ) {
			return $this->renderAjax("index");
		}
		return $this->render("index");
	}

	public function actionAdd($id, $count = 1)
	{
		try {
			$product = Product::findOne($id);
			if ( $item = $this->cart->getItem($id) ) {
				$this->cart->plus($item->getId(), $count);
			} else {
				$this->cart->add($product, $count);
			}
		} catch (\DomainException $e) {
			\Yii::$app->errorHandler->logException($e);
			\Yii::$app->session->setFlash('error', $e->getMessage());
		}
	}

	public function actionRemove($id)
	{
		try {
			$product = $this->getProduct($id);
			$this->cart->remove($product->id);
		} catch (\DomainException $e) {
			\Yii::$app->errorHandler->logException($e);
			\Yii::$app->session->setFlash('error', $e->getMessage());
		}
		return $this->redirect(['cart/index']);
	}

	public function actionGetCart()
	{
		\Yii::$app->response->format = Response::FORMAT_JSON;
		$result = [];
		foreach ($this->cart->getItems() as $item) {
			$result[] = [
				"product_id" => $item->getProduct()->id,
				"quantity" => $item->getQuantity(),
			];
		}
		return $result;
	}

	public function actionGetProducts()
	{
		\Yii::$app->response->format = Response::FORMAT_JSON;
		$result = [];
		$categories = Category::find()->all();
		foreach ($categories as $category) {
			if ( count($products = $category->products) > 0 ) {
				foreach ($products as $product) {
					$result[$product->id] = "{$product->title}({$product->value})";
				}
			}
		}
		return $result;
	}

	private function getProduct($id)
	{
		if ( ($product = Product::findOne((int)$id)) ) {
			return $product;
		}
		throw new \DomainException(\Yii::t("app", "Product not found"));
	}
}